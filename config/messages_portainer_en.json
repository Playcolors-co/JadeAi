{
  "portainer": {
    "info": {
      "setup_start": "Starting Jade Portainer setup",
      "setup_complete": "Portainer setup completed successfully",
      "prerequisites": {
        "checking": "Checking Portainer prerequisites",
        "passed": "All Portainer prerequisites passed"
      },
      "packages": {
        "installing": "Installing Portainer packages",
        "installing_specific": "Installing package: {0}",
        "complete": "Portainer package installation completed"
      },
      "nginx": {
        "configuring": "Configuring Nginx reverse proxy",
        "starting": "Starting Nginx service",
        "complete": "Nginx configuration completed"
      },
      "ssl": {
        "configuring": "Configuring SSL certificates",
        "generating": "Generating SSL certificate for {0}",
        "complete": "SSL configuration completed"
      },
      "portainer": {
        "configuring": "Configuring Portainer service",
        "templates": "Setting up container templates",
        "starting": "Starting Portainer service",
        "complete": "Portainer configuration completed"
      },
      "docker": {
        "setup": "Setting up Portainer container",
        "starting": "Starting Portainer container",
        "complete": "Portainer container setup completed"
      },
      "testing": "Running Portainer tests",
      "tests_passed": "All Portainer tests passed",
      "deployment": {
        "status": "Current Portainer deployment status: {0}",
        "version": "Portainer component version: {0}",
        "backup": "Creating Portainer configuration backup",
        "rollback": "Rolling back Portainer configuration"
      }
    },
    "warn": {
      "nginx": {
        "restart": "Nginx service restart required",
        "config_modified": "Nginx configuration has been modified - reload needed",
        "performance": "High server load detected"
      },
      "ssl": {
        "expiring": "SSL certificate for {0} expires in {1} days",
        "self_signed": "Using self-signed certificate for {0}",
        "renewal": "Certificate renewal recommended"
      },
      "portainer": {
        "templates": "Some container templates could not be loaded",
        "endpoints": "Some Docker endpoints are not responding",
        "resources": "System resources running low",
        "updates": "New Portainer version available: {0}"
      },
      "backup": {
        "partial": "Some Portainer configuration files could not be backed up",
        "skipped": "Backup skipped - no existing Portainer configuration found"
      },
      "test": {
        "skipped": "Portainer tests skipped - test script not found",
        "timeout": "Portainer test execution exceeded timeout of {0} seconds"
      }
    },
    "error": {
      "prerequisites": {
        "system": "System component must be deployed first",
        "version": "System version {0} is required (current: {1})"
      },
      "package": {
        "install": "Failed to install Portainer package: {0}",
        "configure": "Failed to configure package: {0}",
        "dependency": "Missing required dependency: {0}"
      },
      "nginx": {
        "config": "Failed to create Nginx configuration",
        "start": "Failed to start Nginx service",
        "reload": "Failed to reload Nginx configuration",
        "site": "Failed to enable Nginx site"
      },
      "ssl": {
        "generate": "Failed to generate SSL certificate",
        "install": "Failed to install SSL certificate",
        "verify": "Certificate verification failed",
        "chain": "Invalid certificate chain"
      },
      "portainer": {
        "config": "Failed to create Portainer configuration",
        "start": "Failed to start Portainer service",
        "templates": "Failed to configure container templates",
        "admin": "Failed to set admin password",
        "endpoint": "Failed to configure Docker endpoint",
        "access": "Failed to access Docker socket"
      },
      "docker": {
        "build": "Failed to build Portainer Docker image",
        "start": "Failed to start Portainer container",
        "volume": "Failed to mount required volume",
        "network": "Failed to connect to Docker network"
      },
      "deployment": {
        "status": "Failed to update Portainer deployment status",
        "rollback": "Portainer rollback failed - previous version not found",
        "config_restore": "Failed to restore Portainer configuration"
      },
      "test": {
        "failed": "Portainer tests failed: {0}",
        "http": "HTTP test failed - {0}",
        "https": "HTTPS test failed - {0}",
        "api": "API test failed: {0}",
        "auth": "Authentication test failed: {0}",
        "templates": "Template test failed: {0}",
        "containers": "Container management test failed: {0}",
        "performance": "Performance test failed - response time {0}ms (max: {1}ms)"
      }
    }
  }
}
